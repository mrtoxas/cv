---
const locale = Astro.currentLocale;

const getLinks = () => {
  const isPortfolioPage = Astro.url.pathname.includes('portfolio');
  const urlPostfix = isPortfolioPage ? '/portfolio' : ''; 
  return [
    { title: "English", path: `./en${urlPostfix}` },
    { title: "Українська", path: `./ua${urlPostfix}` },
    { title: "Русский", path: `./ru${urlPostfix}` },
  ]
}
---

<script>
const langSelect = () => {

  const selectId = 'lang-select';
  let select = document.getElementById(selectId);

  const langSelectToggler = (event: MouseEvent) => {
    const isMobileScreen = window.matchMedia("(max-width: 767px)").matches;
    if (!select || !isMobileScreen) return;

    select.classList[
      (event.target as HTMLElement).closest(`#${selectId}`) ? "toggle" : "remove"
    ]("is-open");
  }

  document.addEventListener("click", langSelectToggler);
};

document.addEventListener('astro:page-load', langSelect);
</script>

<div id="lang-select" class="md:relative w-full group h-full">
  <button
    id="lang-button"
    type="button"
    class="w-full h-full font-semibold text-center md:rounded capitalize group-[.is-open]:bg-border pt-0.5"
  >
    {locale}
  </button>
  <div class="hidden group-[.is-open]:block md:group-hover:block hover:block absolute bottom-12 md:bottom-auto inset-x-0 md:inset-x-auto md:shadow-md overflow-hidden rounded-sm">
    <div class="flex flex-col w-full bg-accent md:bg-background relative top-1">
      {
        getLinks().map((item) => (
          <a 
            class="text-center p-4 border-border border-t-1 md:border-t-0 md:p-y-2 md:text-left md:hover:bg-backplate" 
            href={item.path}>
            {item.title}
          </a>
        ))
      }
    </div>
  </div>
</div>
